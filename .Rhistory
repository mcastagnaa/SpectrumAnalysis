RollFuExpAv$Date <- as.Date(RollFuExpAv$Date)
EquityExp <- reshape(SpecExpSet[SpecExpSet$Calc == "NetExp" &
SpecExpSet$Class =="BySecGroup" &
SpecExpSet$Typ == "Equities",
SpecExpSet$DetsDate != as.Date("2014-12-12"),
],
drop = c("Typ", "Class", "Calc"),
idvar = c("DetsDate"),
timevar = "Fund",
direction = "wide")
names(EquityExp) <- c("Date",
"Spec3EqExp",
"Spec4EqExp",
"Spec5EqExp",
"Spec6EqExp",
"Spec7EqExp",
"Spec8EqExp")
RollEqExpAv <- data.frame(cbind(EquityExp$Date,
rollapplyr(EquityExp[c("Spec3EqExp",
"Spec4EqExp",
"Spec5EqExp",
"Spec6EqExp",
"Spec7EqExp",
"Spec8EqExp")],
RollingObs, mean, fill=NA)))
colnames(RollEqExpAv)[1] <- "Date"
RollEqExpAv$Date <- as.Date(RollEqExpAv$Date)
###########################
## Pick the "right" exposure variable
## RollFuExAv for equity funds exposure
## RollEqExAv for equity exposure
ExpRollMelt <- melt(RollFuExpAv, id.var = c("Date"), value.name = "Exposure")
###########################
Returns <- subset(CombByDate, select = c(Date,
Spec3Ret,
Spec4Ret,
Spec5Ret,
Spec6Ret,
Spec7Ret,
Spec8Ret)
)
RollRetSd <- data.frame(cbind(Returns$Date,
rollapplyr(Returns[c("Spec3Ret",
"Spec4Ret",
"Spec5Ret",
"Spec6Ret",
"Spec7Ret",
"Spec8Ret")],
RollingObs, sd, fill=NA)))
colnames(RollRetSd)[1] <- "Date"
RollRetSd$Date <- as.Date(RollRetSd$Date)
RetSdRollMelt <- melt(RollRetSd, id.var=c("Date"), value.name = "SdRet")
############
RegSet <- merge(ExpRollMelt, RetSdRollMelt, by = "Date")
boxplot(FundsExp[,-1], las = 2)
View(RollFuExpAv)
View(ExpRollMelt)
View(ExpRollMelt)
ggplot(ExpRollMelt, aes(x=variable, y = Exposure)) +
geom_boxplot() +
theme(axis.text.x = element_test(angle = 90, vjust = 0.5))
ggplot(ExpRollMelt, aes(x=variable, y = Exposure)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
ggplot(ExpRollMelt, aes(x=variable, y = Exposure)) +
xlabel = "Funds" +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
ggplot(ExpRollMelt, aes(x=variable, y = Exposure)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5),
axis.title.x = "Funds")
ggplot(ExpRollMelt, aes(x=variable, y = Exposure)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
xlab("Funds")
View(RetSdRollMelt)
ggplot(RetSdRollMelt, aes(x=variable, y = SdRet)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
xlab("Funds")
library(reshape2)
library(PerformanceAnalytics)
rm(list =ls(all=TRUE))
load("SpecExpSet.Rda")
load("CombByDate.Rda")
RollingObs <- 20
FundsExp <- reshape(SpecExpSet[SpecExpSet$Calc == "NetExp" &
SpecExpSet$Class =="ByFundType" &
SpecExpSet$Typ == "Equity Fund" &
SpecExpSet$DetsDate != as.Date("2014-12-12"),
],
drop = c("Typ", "Class", "Calc"),
idvar = c("DetsDate"),
timevar = "Fund",
direction = "wide")
names(FundsExp) <- c("Date",
"Spec3EqFuExp",
"Spec4EqFuExp",
"Spec5EqFuExp",
"Spec6EqFuExp",
"Spec7EqFuExp",
"Spec8EqFuExp")
RollFuExpAv <- data.frame(cbind(FundsExp$Date,
rollapplyr(FundsExp[c("Spec3EqFuExp",
"Spec4EqFuExp",
"Spec5EqFuExp",
"Spec6EqFuExp",
"Spec7EqFuExp",
"Spec8EqFuExp")],
RollingObs, mean, fill=NA)))
colnames(RollFuExpAv)[1] <- "Date"
RollFuExpAv$Date <- as.Date(RollFuExpAv$Date)
EquityExp <- reshape(SpecExpSet[SpecExpSet$Calc == "NetExp" &
SpecExpSet$Class =="BySecGroup" &
SpecExpSet$Typ == "Equities",
SpecExpSet$DetsDate != as.Date("2014-12-12"),
],
drop = c("Typ", "Class", "Calc"),
idvar = c("DetsDate"),
timevar = "Fund",
direction = "wide")
names(EquityExp) <- c("Date",
"Spec3EqExp",
"Spec4EqExp",
"Spec5EqExp",
"Spec6EqExp",
"Spec7EqExp",
"Spec8EqExp")
RollEqExpAv <- data.frame(cbind(EquityExp$Date,
rollapplyr(EquityExp[c("Spec3EqExp",
"Spec4EqExp",
"Spec5EqExp",
"Spec6EqExp",
"Spec7EqExp",
"Spec8EqExp")],
RollingObs, mean, fill=NA)))
colnames(RollEqExpAv)[1] <- "Date"
RollEqExpAv$Date <- as.Date(RollEqExpAv$Date)
###########################
## Pick the "right" exposure variable
## RollFuExAv for equity funds exposure
## RollEqExAv for equity exposure
ExpRollMelt <- melt(RollFuExpAv, id.var = c("Date"), value.name = "Exposure")
###########################
Returns <- subset(CombByDate, select = c(Date,
Spec3Ret,
Spec4Ret,
Spec5Ret,
Spec6Ret,
Spec7Ret,
Spec8Ret)
)
RollRetSd <- data.frame(cbind(Returns$Date,
rollapplyr(Returns[c("Spec3Ret",
"Spec4Ret",
"Spec5Ret",
"Spec6Ret",
"Spec7Ret",
"Spec8Ret")],
RollingObs, sd, fill=NA)))
colnames(RollRetSd)[1] <- "Date"
RollRetSd$Date <- as.Date(RollRetSd$Date)
RetSdRollMelt <- melt(RollRetSd, id.var=c("Date"), value.name = "SdRet")
############
RegSet <- merge(ExpRollMelt, RetSdRollMelt, by = "Date")
library(reshape2)
library(PerformanceAnalytics)
rm(list =ls(all=TRUE))
load("SpecExpSet.Rda")
load("CombByDate.Rda")
RollingObs <- 20
FundsExp <- reshape(SpecExpSet[SpecExpSet$Calc == "NetExp" &
SpecExpSet$Class =="ByFundType" &
SpecExpSet$Typ == "Equity Fund" &
SpecExpSet$DetsDate != as.Date("2014-12-12"),
],
drop = c("Typ", "Class", "Calc"),
idvar = c("DetsDate"),
timevar = "Fund",
direction = "wide")
names(FundsExp) <- c("Date",
"Spec3EqFuExp",
"Spec4EqFuExp",
"Spec5EqFuExp",
"Spec6EqFuExp",
"Spec7EqFuExp",
"Spec8EqFuExp")
RollFuExpAv <- data.frame(cbind(FundsExp$Date,
rollapplyr(FundsExp[c("Spec3EqFuExp",
"Spec4EqFuExp",
"Spec5EqFuExp",
"Spec6EqFuExp",
"Spec7EqFuExp",
"Spec8EqFuExp")],
RollingObs, mean, fill=NA)))
colnames(RollFuExpAv)[1] <- "Date"
RollFuExpAv$Date <- as.Date(RollFuExpAv$Date)
EquityExp <- reshape(SpecExpSet[SpecExpSet$Calc == "NetExp" &
SpecExpSet$Class =="BySecGroup" &
SpecExpSet$Typ == "Equities"&
SpecExpSet$DetsDate != as.Date("2014-12-12"),
],
drop = c("Typ", "Class", "Calc"),
idvar = c("DetsDate"),
timevar = "Fund",
direction = "wide")
names(EquityExp) <- c("Date",
"Spec3EqExp",
"Spec4EqExp",
"Spec5EqExp",
"Spec6EqExp",
"Spec7EqExp",
"Spec8EqExp")
RollEqExpAv <- data.frame(cbind(EquityExp$Date,
rollapplyr(EquityExp[c("Spec3EqExp",
"Spec4EqExp",
"Spec5EqExp",
"Spec6EqExp",
"Spec7EqExp",
"Spec8EqExp")],
RollingObs, mean, fill=NA)))
colnames(RollEqExpAv)[1] <- "Date"
RollEqExpAv$Date <- as.Date(RollEqExpAv$Date)
###########################
## Pick the "right" exposure variable
## RollFuExAv for equity funds exposure
## RollEqExAv for equity exposure
ExpRollMelt <- melt(RollFuExpAv, id.var = c("Date"), value.name = "Exposure")
###########################
Returns <- subset(CombByDate, select = c(Date,
Spec3Ret,
Spec4Ret,
Spec5Ret,
Spec6Ret,
Spec7Ret,
Spec8Ret)
)
RollRetSd <- data.frame(cbind(Returns$Date,
rollapplyr(Returns[c("Spec3Ret",
"Spec4Ret",
"Spec5Ret",
"Spec6Ret",
"Spec7Ret",
"Spec8Ret")],
RollingObs, sd, fill=NA)))
colnames(RollRetSd)[1] <- "Date"
RollRetSd$Date <- as.Date(RollRetSd$Date)
RetSdRollMelt <- melt(RollRetSd, id.var=c("Date"), value.name = "SdRet")
############
RegSet <- merge(ExpRollMelt, RetSdRollMelt, by = "Date")
View(RegSet)
summary(lm(SdRet ~ Exposure))
summary(lm(SdRet ~ Exposure, data = RegSet))
library(reshape2)
library(PerformanceAnalytics)
rm(list =ls(all=TRUE))
load("SpecExpSet.Rda")
load("CombByDate.Rda")
RollingObs <- 20
FundsExp <- reshape(SpecExpSet[SpecExpSet$Calc == "NetExp" &
SpecExpSet$Class =="ByFundType" &
SpecExpSet$Typ == "Equity Fund" &
SpecExpSet$DetsDate != as.Date("2014-12-12"),
],
drop = c("Typ", "Class", "Calc"),
idvar = c("DetsDate"),
timevar = "Fund",
direction = "wide")
names(FundsExp) <- c("Date",
"Spec3EqFuExp",
"Spec4EqFuExp",
"Spec5EqFuExp",
"Spec6EqFuExp",
"Spec7EqFuExp",
"Spec8EqFuExp")
RollFuExpAv <- data.frame(cbind(FundsExp$Date,
rollapplyr(FundsExp[c("Spec3EqFuExp",
"Spec4EqFuExp",
"Spec5EqFuExp",
"Spec6EqFuExp",
"Spec7EqFuExp",
"Spec8EqFuExp")],
RollingObs, mean, fill=NA)))
colnames(RollFuExpAv)[1] <- "Date"
RollFuExpAv$Date <- as.Date(RollFuExpAv$Date)
EquityExp <- reshape(SpecExpSet[SpecExpSet$Calc == "NetExp" &
SpecExpSet$Class =="BySecGroup" &
SpecExpSet$Typ == "Equities"&
SpecExpSet$DetsDate != as.Date("2014-12-12"),
],
drop = c("Typ", "Class", "Calc"),
idvar = c("DetsDate"),
timevar = "Fund",
direction = "wide")
names(EquityExp) <- c("Date",
"Spec3EqExp",
"Spec4EqExp",
"Spec5EqExp",
"Spec6EqExp",
"Spec7EqExp",
"Spec8EqExp")
RollEqExpAv <- data.frame(cbind(EquityExp$Date,
rollapplyr(EquityExp[c("Spec3EqExp",
"Spec4EqExp",
"Spec5EqExp",
"Spec6EqExp",
"Spec7EqExp",
"Spec8EqExp")],
RollingObs, mean, fill=NA)))
colnames(RollEqExpAv)[1] <- "Date"
RollEqExpAv$Date <- as.Date(RollEqExpAv$Date)
###########################
## Pick the "right" exposure variable
## RollFuExAv for equity funds exposure
## RollEqExAv for equity exposure
ExpRollMelt <- melt(RollFuExpAv, id.var = c("Date"), value.name = "Exposure")
###########################
Returns <- subset(CombByDate, select = c(Date,
Spec3Ret,
Spec4Ret,
Spec5Ret,
Spec6Ret,
Spec7Ret,
Spec8Ret)
)
RollRetSd <- data.frame(cbind(Returns$Date,
rollapplyr(Returns[c("Spec3Ret",
"Spec4Ret",
"Spec5Ret",
"Spec6Ret",
"Spec7Ret",
"Spec8Ret")],
RollingObs, sd, fill=NA)))
colnames(RollRetSd)[1] <- "Date"
RollRetSd$Date <- as.Date(RollRetSd$Date)
RetSdRollMelt <- melt(RollRetSd, id.var=c("Date"), value.name = "SdRet")
############
RegSet <- merge(ExpRollMelt, RetSdRollMelt, by = "Date")
library(ggplot2)
boxplot(FundsExp[,-1], las = 2)
ggplot(ExpRollMelt, aes(x=variable, y = Exposure)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
xlab("Funds")
ggplot(RetSdRollMelt, aes(x=variable, y = SdRet)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
xlab("Funds")
install.packages(c("knitr", "manipulate", "rmarkdown"))
xyplot(SdRet ~ variable | Funds, data = RegSet)
library(lattice)
xyplot(SdRet ~ variable | Funds, data = RegSet)
View(RegSet)
xyplot(SdRet ~ Exposure | variable.x, data = RegSet)
ggplot(ExpRollMelt, aes(x=variable, y = Exposure)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
xlab("Funds")
ggplot(RetSdRollMelt, aes(x=variable, y = SdRet)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
xlab("Funds")
View(RegSet)
View(RetSdRollMelt)
View(RetSdRollMelt)
View(RollRetSd)
RetSdRollMelt$variable <- substr(RetSdRollMelt$variable, 1, 5)
View(RetSdRollMelt)
View(ExpRollMelt)
ExpRollMelt$variable <- substr(ExpRollMelt$variable, 1, 5)
RegSet <- merge(ExpRollMelt, RetSdRollMelt, by = c("Date", "variable")
)
xyplot(SdRet ~ Exposure | variable.x, data = RegSet)
View(RegSet)
xyplot(SdRet ~ Exposure | variable, data = RegSet)
summary(lm(SdRet ~ Exposure, data = RegSet))
ggplot(RegSet, aes(x=Exposure, y = SdRet)) +
geom_point() +
labs(x = "Eq.Funds exposure", y = "StDev of returns")
summary(lm(SdRet * 100 ~ Exposure * 100, data = RegSet))
summary(lm((SdRet * 100) ~ (Exposure * 100), data = RegSet))
summary(lm(SdRet ~ Exposure, data = RegSet))
ggplot(RegSet, aes(x=Exposure, y = SdRet,
colour = factor(variable)) +
geom_point() +
labs(x = "Eq.Funds exposure", y = "StDev of returns")
)
ggplot(RegSet, aes(x=Exposure, y = SdRet,
colour = factor(variable))) +
geom_point() +
labs(x = "Eq.Funds exposure", y = "StDev of returns")
ggplot(RegSet, aes(x=Exposure, y = SdRet,
colour = variable)) +
geom_point() +
labs(x = "Eq.Funds exposure", y = "StDev of returns")
ggplot(RegSet, aes(x=Exposure, y = SdRet,
colour = variable)) +
geom_point() +
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(parse("Rolling"), RollingObs, "observations")
ggplot(RegSet, aes(x=Exposure, y = SdRet,
colour = variable)) +
geom_point() +
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(parse("Rolling", RollingObs, "observations"))
ggplot(RegSet, aes(x=Exposure, y = SdRet,
colour = variable)) +
geom_point() +
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(parse("Rolling", as.character(RollingObs), "observations"))
ggplot(RegSet, aes(x=Exposure, y = SdRet,
colour = variable)) +
geom_point() +
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(paste("Rolling", as.character(RollingObs), "observations"))
ggplot(RegSet, aes(x=Exposure, y = SdRet,
colour = variable)) +
geom_point() +
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(paste("Rolling", RollingObs, "observations"))
summary(lm(SdRet ~ Exposure, data = RegSet))
ggplot(RegSet, aes(x=Exposure, y = SdRet,
colour = variable)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm)
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(paste("Rolling", RollingObs, "observations"))
ggplot(RegSet, aes(x=Exposure, y = SdRet#,
#colour = factor(variable)
)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm)
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(paste("Rolling", RollingObs, "observations"))
ggplot(RegSet, aes(x=Exposure, y = SdRet#,
#colour = factor(variable)
)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm, color="black", formula = y ~ x)
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(paste("Rolling", RollingObs, "observations"))
ggplot(RegSet, aes(x=Exposure, y = SdRet#,
#colour = factor(variable)
)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm, color="black", formula = y ~ x) +
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(paste("Rolling", RollingObs, "observations"))
ggplot(RegSet, aes(x=Exposure, y = SdRet#,
#colour = factor(variable)
)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm, color="black", formula = SdRet ~ Exposure) +
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(paste("Rolling", RollingObs, "observations"))
ggplot(RegSet, aes(x=Exposure, y = SdRet#,
#colour = factor(variable)
)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm, color="black", formula = RegSet$SdRet ~ RegSet$Exposure) +
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(paste("Rolling", RollingObs, "observations"))
ggplot(RegSet, aes(x=Exposure, y = SdRet#,
#colour = factor(variable)
)) +
geom_smooth(method="lm", color="black", formula = SdRet ~ Exposure) +
geom_point(shape=1) +    # Use hollow circles
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(paste("Rolling", RollingObs, "observations"))
ggplot(RegSet, aes(x=Exposure, y = SdRet
#, colour = factor(variable)
)) +
geom_smooth(method="lm", color="black", formula = SdRet ~ Exposure) +
geom_point(shape=1)
ggplot(RegSet, aes(x=Exposure, y = SdRet
#, colour = factor(variable)
)) +
geom_smooth(method="lm") +
geom_point(shape=1) +    # Use hollow circles
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(paste("Rolling", RollingObs, "observations"))
ggplot(RegSet, aes(x=Exposure, y = SdRet
#, colour = factor(variable)
)) +
geom_smooth(method="lm") +
geom_point(shape=1) +    # Use hollow circles
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(paste("Rolling", RollingObs, "observations"))
ggplot(RegSet, aes(x=Exposure, y = SdRet
, colour = factor(variable)
)) +
geom_smooth(method="lm") +
geom_point(shape=1) +    # Use hollow circles
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(paste("Rolling", RollingObs, "observations"))
summary(lm(SdRet ~ Exposure, Date, data = RegSet))
summary(lm(SdRet ~ c(Exposure, Date), data = RegSet))
summary(lm(SdRet ~ Exposure + Date, data = RegSet))
summary(lm(SdRet ~ Exposure, data = RegSet))
ggplot(RegSet, aes(x=Exposure, y = SdRet
, colour = factor(variable)
)) +
geom_point(shape=1) +    # Use hollow circles
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(paste("Rolling", RollingObs, "observations"))
ggplot(RegSet, aes(x=Exposure, y = SdRet)) +
geom_smooth(method="lm") +
geom_point(shape=1) +    # Use hollow circles
labs(x = "Eq.Funds exposure", y = "StDev of returns") +
ggtitle(paste("Rolling", RollingObs, "observations"))
xyplot(SdRet ~ Exposure | variable, data = RegSet)
